// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: extension.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_extension_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_extension_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_extension_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_extension_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_extension_2eproto;
namespace podextension {
class UnaryReq;
class UnaryReqDefaultTypeInternal;
extern UnaryReqDefaultTypeInternal _UnaryReq_default_instance_;
class UnaryReq_ParametersEntry_DoNotUse;
class UnaryReq_ParametersEntry_DoNotUseDefaultTypeInternal;
extern UnaryReq_ParametersEntry_DoNotUseDefaultTypeInternal _UnaryReq_ParametersEntry_DoNotUse_default_instance_;
class UnaryResp;
class UnaryRespDefaultTypeInternal;
extern UnaryRespDefaultTypeInternal _UnaryResp_default_instance_;
class UnaryResp_ParametersEntry_DoNotUse;
class UnaryResp_ParametersEntry_DoNotUseDefaultTypeInternal;
extern UnaryResp_ParametersEntry_DoNotUseDefaultTypeInternal _UnaryResp_ParametersEntry_DoNotUse_default_instance_;
}  // namespace podextension
PROTOBUF_NAMESPACE_OPEN
template<> ::podextension::UnaryReq* Arena::CreateMaybeMessage<::podextension::UnaryReq>(Arena*);
template<> ::podextension::UnaryReq_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage<::podextension::UnaryReq_ParametersEntry_DoNotUse>(Arena*);
template<> ::podextension::UnaryResp* Arena::CreateMaybeMessage<::podextension::UnaryResp>(Arena*);
template<> ::podextension::UnaryResp_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage<::podextension::UnaryResp_ParametersEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace podextension {

// ===================================================================

class UnaryReq_ParametersEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<UnaryReq_ParametersEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<UnaryReq_ParametersEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  UnaryReq_ParametersEntry_DoNotUse();
  UnaryReq_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const UnaryReq_ParametersEntry_DoNotUse& other);
  static const UnaryReq_ParametersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const UnaryReq_ParametersEntry_DoNotUse*>(&_UnaryReq_ParametersEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "podextension.UnaryReq.ParametersEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "podextension.UnaryReq.ParametersEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_extension_2eproto);
    return ::descriptor_table_extension_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class UnaryReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:podextension.UnaryReq) */ {
 public:
  inline UnaryReq() : UnaryReq(nullptr) {};
  virtual ~UnaryReq();

  UnaryReq(const UnaryReq& from);
  UnaryReq(UnaryReq&& from) noexcept
    : UnaryReq() {
    *this = ::std::move(from);
  }

  inline UnaryReq& operator=(const UnaryReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnaryReq& operator=(UnaryReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnaryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnaryReq* internal_default_instance() {
    return reinterpret_cast<const UnaryReq*>(
               &_UnaryReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UnaryReq& a, UnaryReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UnaryReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnaryReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnaryReq* New() const final {
    return CreateMaybeMessage<UnaryReq>(nullptr);
  }

  UnaryReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnaryReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnaryReq& from);
  void MergeFrom(const UnaryReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnaryReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "podextension.UnaryReq";
  }
  protected:
  explicit UnaryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_extension_2eproto);
    return ::descriptor_table_extension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kParametersFieldNumber = 2,
    kIntentNameFieldNumber = 1,
  };
  // map<string, string> parameters = 2;
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;
  public:
  void clear_parameters();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_parameters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_parameters();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      parameters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_parameters();

  // string intent_name = 1;
  void clear_intent_name();
  const std::string& intent_name() const;
  void set_intent_name(const std::string& value);
  void set_intent_name(std::string&& value);
  void set_intent_name(const char* value);
  void set_intent_name(const char* value, size_t size);
  std::string* mutable_intent_name();
  std::string* release_intent_name();
  void set_allocated_intent_name(std::string* intent_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_intent_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_intent_name(
      std::string* intent_name);
  private:
  const std::string& _internal_intent_name() const;
  void _internal_set_intent_name(const std::string& value);
  std::string* _internal_mutable_intent_name();
  public:

  // @@protoc_insertion_point(class_scope:podextension.UnaryReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      UnaryReq_ParametersEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > parameters_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr intent_name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_extension_2eproto;
};
// -------------------------------------------------------------------

class UnaryResp_ParametersEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<UnaryResp_ParametersEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<UnaryResp_ParametersEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  UnaryResp_ParametersEntry_DoNotUse();
  UnaryResp_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const UnaryResp_ParametersEntry_DoNotUse& other);
  static const UnaryResp_ParametersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const UnaryResp_ParametersEntry_DoNotUse*>(&_UnaryResp_ParametersEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "podextension.UnaryResp.ParametersEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "podextension.UnaryResp.ParametersEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_extension_2eproto);
    return ::descriptor_table_extension_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class UnaryResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:podextension.UnaryResp) */ {
 public:
  inline UnaryResp() : UnaryResp(nullptr) {};
  virtual ~UnaryResp();

  UnaryResp(const UnaryResp& from);
  UnaryResp(UnaryResp&& from) noexcept
    : UnaryResp() {
    *this = ::std::move(from);
  }

  inline UnaryResp& operator=(const UnaryResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnaryResp& operator=(UnaryResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnaryResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnaryResp* internal_default_instance() {
    return reinterpret_cast<const UnaryResp*>(
               &_UnaryResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UnaryResp& a, UnaryResp& b) {
    a.Swap(&b);
  }
  inline void Swap(UnaryResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnaryResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnaryResp* New() const final {
    return CreateMaybeMessage<UnaryResp>(nullptr);
  }

  UnaryResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnaryResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnaryResp& from);
  void MergeFrom(const UnaryResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnaryResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "podextension.UnaryResp";
  }
  protected:
  explicit UnaryResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_extension_2eproto);
    return ::descriptor_table_extension_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kParametersFieldNumber = 2,
    kIntentNameFieldNumber = 1,
  };
  // map<string, string> parameters = 2;
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;
  public:
  void clear_parameters();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_parameters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_parameters();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      parameters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_parameters();

  // string intent_name = 1;
  void clear_intent_name();
  const std::string& intent_name() const;
  void set_intent_name(const std::string& value);
  void set_intent_name(std::string&& value);
  void set_intent_name(const char* value);
  void set_intent_name(const char* value, size_t size);
  std::string* mutable_intent_name();
  std::string* release_intent_name();
  void set_allocated_intent_name(std::string* intent_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_intent_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_intent_name(
      std::string* intent_name);
  private:
  const std::string& _internal_intent_name() const;
  void _internal_set_intent_name(const std::string& value);
  std::string* _internal_mutable_intent_name();
  public:

  // @@protoc_insertion_point(class_scope:podextension.UnaryResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      UnaryResp_ParametersEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > parameters_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr intent_name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_extension_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// UnaryReq

// string intent_name = 1;
inline void UnaryReq::clear_intent_name() {
  intent_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& UnaryReq::intent_name() const {
  // @@protoc_insertion_point(field_get:podextension.UnaryReq.intent_name)
  return _internal_intent_name();
}
inline void UnaryReq::set_intent_name(const std::string& value) {
  _internal_set_intent_name(value);
  // @@protoc_insertion_point(field_set:podextension.UnaryReq.intent_name)
}
inline std::string* UnaryReq::mutable_intent_name() {
  // @@protoc_insertion_point(field_mutable:podextension.UnaryReq.intent_name)
  return _internal_mutable_intent_name();
}
inline const std::string& UnaryReq::_internal_intent_name() const {
  return intent_name_.Get();
}
inline void UnaryReq::_internal_set_intent_name(const std::string& value) {
  
  intent_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void UnaryReq::set_intent_name(std::string&& value) {
  
  intent_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:podextension.UnaryReq.intent_name)
}
inline void UnaryReq::set_intent_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  intent_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:podextension.UnaryReq.intent_name)
}
inline void UnaryReq::set_intent_name(const char* value,
    size_t size) {
  
  intent_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:podextension.UnaryReq.intent_name)
}
inline std::string* UnaryReq::_internal_mutable_intent_name() {
  
  return intent_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* UnaryReq::release_intent_name() {
  // @@protoc_insertion_point(field_release:podextension.UnaryReq.intent_name)
  return intent_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnaryReq::set_allocated_intent_name(std::string* intent_name) {
  if (intent_name != nullptr) {
    
  } else {
    
  }
  intent_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), intent_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:podextension.UnaryReq.intent_name)
}
inline std::string* UnaryReq::unsafe_arena_release_intent_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:podextension.UnaryReq.intent_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return intent_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void UnaryReq::unsafe_arena_set_allocated_intent_name(
    std::string* intent_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (intent_name != nullptr) {
    
  } else {
    
  }
  intent_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      intent_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:podextension.UnaryReq.intent_name)
}

// map<string, string> parameters = 2;
inline int UnaryReq::_internal_parameters_size() const {
  return parameters_.size();
}
inline int UnaryReq::parameters_size() const {
  return _internal_parameters_size();
}
inline void UnaryReq::clear_parameters() {
  parameters_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
UnaryReq::_internal_parameters() const {
  return parameters_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
UnaryReq::parameters() const {
  // @@protoc_insertion_point(field_map:podextension.UnaryReq.parameters)
  return _internal_parameters();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
UnaryReq::_internal_mutable_parameters() {
  return parameters_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
UnaryReq::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_map:podextension.UnaryReq.parameters)
  return _internal_mutable_parameters();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UnaryResp

// string intent_name = 1;
inline void UnaryResp::clear_intent_name() {
  intent_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& UnaryResp::intent_name() const {
  // @@protoc_insertion_point(field_get:podextension.UnaryResp.intent_name)
  return _internal_intent_name();
}
inline void UnaryResp::set_intent_name(const std::string& value) {
  _internal_set_intent_name(value);
  // @@protoc_insertion_point(field_set:podextension.UnaryResp.intent_name)
}
inline std::string* UnaryResp::mutable_intent_name() {
  // @@protoc_insertion_point(field_mutable:podextension.UnaryResp.intent_name)
  return _internal_mutable_intent_name();
}
inline const std::string& UnaryResp::_internal_intent_name() const {
  return intent_name_.Get();
}
inline void UnaryResp::_internal_set_intent_name(const std::string& value) {
  
  intent_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void UnaryResp::set_intent_name(std::string&& value) {
  
  intent_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:podextension.UnaryResp.intent_name)
}
inline void UnaryResp::set_intent_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  intent_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:podextension.UnaryResp.intent_name)
}
inline void UnaryResp::set_intent_name(const char* value,
    size_t size) {
  
  intent_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:podextension.UnaryResp.intent_name)
}
inline std::string* UnaryResp::_internal_mutable_intent_name() {
  
  return intent_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* UnaryResp::release_intent_name() {
  // @@protoc_insertion_point(field_release:podextension.UnaryResp.intent_name)
  return intent_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnaryResp::set_allocated_intent_name(std::string* intent_name) {
  if (intent_name != nullptr) {
    
  } else {
    
  }
  intent_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), intent_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:podextension.UnaryResp.intent_name)
}
inline std::string* UnaryResp::unsafe_arena_release_intent_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:podextension.UnaryResp.intent_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return intent_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void UnaryResp::unsafe_arena_set_allocated_intent_name(
    std::string* intent_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (intent_name != nullptr) {
    
  } else {
    
  }
  intent_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      intent_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:podextension.UnaryResp.intent_name)
}

// map<string, string> parameters = 2;
inline int UnaryResp::_internal_parameters_size() const {
  return parameters_.size();
}
inline int UnaryResp::parameters_size() const {
  return _internal_parameters_size();
}
inline void UnaryResp::clear_parameters() {
  parameters_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
UnaryResp::_internal_parameters() const {
  return parameters_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
UnaryResp::parameters() const {
  // @@protoc_insertion_point(field_map:podextension.UnaryResp.parameters)
  return _internal_parameters();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
UnaryResp::_internal_mutable_parameters() {
  return parameters_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
UnaryResp::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_map:podextension.UnaryResp.parameters)
  return _internal_mutable_parameters();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace podextension

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_extension_2eproto
