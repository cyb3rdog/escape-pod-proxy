// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cybervector_proxy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cybervector {

  /// <summary>Holder for reflection information generated from cybervector_proxy.proto</summary>
  public static partial class CybervectorProxyReflection {

    #region Descriptor
    /// <summary>File descriptor for cybervector_proxy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CybervectorProxyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdjeWJlcnZlY3Rvcl9wcm94eS5wcm90bxILY3liZXJ2ZWN0b3IiJgoQU3Vi",
            "c2NyaWJlUmVxdWVzdBISCgprZWVwX2FsaXZlGAEgASgDIhQKElVuc3Vic2Ny",
            "aWJlUmVxdWVzdCLdAQoNUHJveHlNZXNzYWFnZRIuCgxtZXNzYWdlX3R5cGUY",
            "ASABKA4yGC5jeWJlcnZlY3Rvci5NZXNzYWdlVHlwZRIUCgxtZXNzYWdlX2Rh",
            "dGEYAiABKAkSEwoLaW50ZW50X25hbWUYAyABKAkSPgoKcGFyYW1ldGVycxgE",
            "IAMoCzIqLmN5YmVydmVjdG9yLlByb3h5TWVzc2FhZ2UuUGFyYW1ldGVyc0Vu",
            "dHJ5GjEKD1BhcmFtZXRlcnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBKl4KC01lc3NhZ2VUeXBlEgsKB1Vua25vd24QABIOCgpTdWJz",
            "Y3JpYmVkEAESEAoMVW5zdWJzY3JpYmVkEAISDQoJS2VlcEFsaXZlEAMSEQoN",
            "UHJvY2Vzc0ludGVudBAEMrMBChdDeWJlclZlY3RvclByb3h5U2VydmljZRJK",
            "CglTdWJzY3JpYmUSHS5jeWJlcnZlY3Rvci5TdWJzY3JpYmVSZXF1ZXN0Ghou",
            "Y3liZXJ2ZWN0b3IuUHJveHlNZXNzYWFnZSIAMAESTAoLVW5TdWJzY3JpYmUS",
            "Hy5jeWJlcnZlY3Rvci5VbnN1YnNjcmliZVJlcXVlc3QaGi5jeWJlcnZlY3Rv",
            "ci5Qcm94eU1lc3NhYWdlIgBCQFo+Z2l0aHViLmNvbS9jeWIzcmRvZy9lc2Nh",
            "cGUtcG9kLXByb3h5L3Byb3RvL2xhbmcvZ28vY3liZXJ2ZWN0b3JiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Cybervector.MessageType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cybervector.SubscribeRequest), global::Cybervector.SubscribeRequest.Parser, new[]{ "KeepAlive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cybervector.UnsubscribeRequest), global::Cybervector.UnsubscribeRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cybervector.ProxyMessaage), global::Cybervector.ProxyMessaage.Parser, new[]{ "MessageType", "MessageData", "IntentName", "Parameters" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Subscribed")] Subscribed = 1,
    [pbr::OriginalName("Unsubscribed")] Unsubscribed = 2,
    [pbr::OriginalName("KeepAlive")] KeepAlive = 3,
    [pbr::OriginalName("ProcessIntent")] ProcessIntent = 4,
  }

  #endregion

  #region Messages
  public sealed partial class SubscribeRequest : pb::IMessage<SubscribeRequest> {
    private static readonly pb::MessageParser<SubscribeRequest> _parser = new pb::MessageParser<SubscribeRequest>(() => new SubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cybervector.CybervectorProxyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest(SubscribeRequest other) : this() {
      keepAlive_ = other.keepAlive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest Clone() {
      return new SubscribeRequest(this);
    }

    /// <summary>Field number for the "keep_alive" field.</summary>
    public const int KeepAliveFieldNumber = 1;
    private long keepAlive_;
    /// <summary>
    /// keep alive stream interval in seconds, 
    /// requested from client, default 30 seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long KeepAlive {
      get { return keepAlive_; }
      set {
        keepAlive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KeepAlive != other.KeepAlive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (KeepAlive != 0L) hash ^= KeepAlive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (KeepAlive != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(KeepAlive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (KeepAlive != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(KeepAlive);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.KeepAlive != 0L) {
        KeepAlive = other.KeepAlive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            KeepAlive = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeRequest : pb::IMessage<UnsubscribeRequest> {
    private static readonly pb::MessageParser<UnsubscribeRequest> _parser = new pb::MessageParser<UnsubscribeRequest>(() => new UnsubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cybervector.CybervectorProxyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest(UnsubscribeRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest Clone() {
      return new UnsubscribeRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ProxyMessaage : pb::IMessage<ProxyMessaage> {
    private static readonly pb::MessageParser<ProxyMessaage> _parser = new pb::MessageParser<ProxyMessaage>(() => new ProxyMessaage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProxyMessaage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cybervector.CybervectorProxyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProxyMessaage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProxyMessaage(ProxyMessaage other) : this() {
      messageType_ = other.messageType_;
      messageData_ = other.messageData_;
      intentName_ = other.intentName_;
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProxyMessaage Clone() {
      return new ProxyMessaage(this);
    }

    /// <summary>Field number for the "message_type" field.</summary>
    public const int MessageTypeFieldNumber = 1;
    private global::Cybervector.MessageType messageType_ = 0;
    /// <summary>
    /// Proxy Message Type enum
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cybervector.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "message_data" field.</summary>
    public const int MessageDataFieldNumber = 2;
    private string messageData_ = "";
    /// <summary>
    /// Proxy Message Json data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageData {
      get { return messageData_; }
      set {
        messageData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "intent_name" field.</summary>
    public const int IntentNameFieldNumber = 3;
    private string intentName_ = "";
    /// <summary>
    /// The named intent to respond with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IntentName {
      get { return intentName_; }
      set {
        intentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_parameters_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> parameters_ = new pbc::MapField<string, string>();
    /// <summary>
    /// A list of parameters as parsed by the escape pod
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProxyMessaage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProxyMessaage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageType != other.MessageType) return false;
      if (MessageData != other.MessageData) return false;
      if (IntentName != other.IntentName) return false;
      if (!Parameters.Equals(other.Parameters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (MessageData.Length != 0) hash ^= MessageData.GetHashCode();
      if (IntentName.Length != 0) hash ^= IntentName.GetHashCode();
      hash ^= Parameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (MessageData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MessageData);
      }
      if (IntentName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IntentName);
      }
      parameters_.WriteTo(output, _map_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (MessageData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageData);
      }
      if (IntentName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IntentName);
      }
      size += parameters_.CalculateSize(_map_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProxyMessaage other) {
      if (other == null) {
        return;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.MessageData.Length != 0) {
        MessageData = other.MessageData;
      }
      if (other.IntentName.Length != 0) {
        IntentName = other.IntentName;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            messageType_ = (global::Cybervector.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            MessageData = input.ReadString();
            break;
          }
          case 26: {
            IntentName = input.ReadString();
            break;
          }
          case 34: {
            parameters_.AddEntriesFrom(input, _map_parameters_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
