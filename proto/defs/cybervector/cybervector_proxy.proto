syntax = "proto3";

package cybervector;
option go_package = "github.com/cyb3rdog/escape-pod-proxy/proto/lang/go/cybervector";

service CyberVectorProxyService {
  rpc Subscribe (SubscribeRequest) returns (stream ProxyMessaage) {}
  rpc UnSubscribe (UnsubscribeRequest) returns (ProxyMessaage) {}
}

enum MessageType{
  Unknown = 0;
  Subscribed = 1;
  Unsubscribed = 2;
  KeepAlive = 3;
  ProcessIntent = 4;
}

message SubscribeRequest {
  // keep alive stream interval in seconds,
  // requested from client, default 30 seconds
  int64 keep_alive = 1;
}

message UnsubscribeRequest {
}

message ProxyMessaage {
  // Proxy Message Type enum
  MessageType message_type = 1;
  // Proxy Message Json data
  string message_data  = 2;
  // The named intent to respond with.
  string intent_name = 3;
  // A list of parameters as parsed by the escape pod
  map<string, string> parameters = 4;
}